// Code generated by "genenum -typename=TeamType -packagename=teamtype -basedir=enum -statstype=int"

package teamtype_stats

import (
	"bytes"
	"fmt"
	"html/template"
	"net/http"

	"github.com/kasworld/gowasm2dgame/enum/teamtype"
)

type TeamTypeStat [teamtype.TeamType_Count]int

func (es *TeamTypeStat) String() string {
	var buf bytes.Buffer
	fmt.Fprintf(&buf, "TeamTypeStats[")
	for i, v := range es {
		fmt.Fprintf(&buf,
			"%v:%v ",
			teamtype.TeamType(i), v)
	}
	buf.WriteString("]")
	return buf.String()
}
func (es *TeamTypeStat) Dec(e teamtype.TeamType) {
	es[e] -= 1
}
func (es *TeamTypeStat) Inc(e teamtype.TeamType) {
	es[e] += 1
}
func (es *TeamTypeStat) Add(e teamtype.TeamType, v int) {
	es[e] += v
}
func (es *TeamTypeStat) SetIfGt(e teamtype.TeamType, v int) {
	if es[e] < v {
		es[e] = v
	}
}
func (es *TeamTypeStat) Get(e teamtype.TeamType) int {
	return es[e]
}

func (es *TeamTypeStat) ToWeb(w http.ResponseWriter, r *http.Request) error {
	tplIndex, err := template.New("index").Funcs(IndexFn).Parse(`
		<html>
		<head>
		<title>TeamType statistics</title>
		</head>
		<body>
		<table border=1 style="border-collapse:collapse;">` +
		HTML_tableheader +
		`{{range $i, $v := .}}` +
		HTML_row +
		`{{end}}` +
		HTML_tableheader +
		`</table>
	
		<br/>
		</body>
		</html>
		`)
	if err != nil {
		return err
	}
	if err := tplIndex.Execute(w, es); err != nil {
		return err
	}
	return nil
}

func Index(i int) string {
	return teamtype.TeamType(i).String()
}

var IndexFn = template.FuncMap{
	"TeamTypeIndex": Index,
}

const (
	HTML_tableheader = `<tr>
		<th>Name</th>
		<th>Value</th>
		</tr>`
	HTML_row = `<tr>
		<td>{{TeamTypeIndex $i}}</td>
		<td>{{$v}}</td>
		</tr>
		`
)
