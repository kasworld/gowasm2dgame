// Code generated by "genenum -typename=EffectType -packagename=effecttype -basedir=enums -statstype=int"

package effecttype_stats

import (
	"bytes"
	"fmt"
	"html/template"
	"net/http"

	"github.com/kasworld/gowasm2dgame/enums/effecttype"
)

type EffectTypeStat [effecttype.EffectType_Count]int

func (es *EffectTypeStat) String() string {
	var buf bytes.Buffer
	fmt.Fprintf(&buf, "EffectTypeStats[")
	for i, v := range es {
		fmt.Fprintf(&buf,
			"%v:%v ",
			effecttype.EffectType(i), v)
	}
	buf.WriteString("]")
	return buf.String()
}
func (es *EffectTypeStat) Inc(e effecttype.EffectType) {
	es[e] += 1
}
func (es *EffectTypeStat) Add(e effecttype.EffectType, v int) {
	es[e] += v
}
func (es *EffectTypeStat) SetIfGt(e effecttype.EffectType, v int) {
	if es[e] < v {
		es[e] = v
	}
}
func (es *EffectTypeStat) Get(e effecttype.EffectType) int {
	return es[e]
}

func (es *EffectTypeStat) ToWeb(w http.ResponseWriter, r *http.Request) error {
	tplIndex, err := template.New("index").Funcs(IndexFn).Parse(`
		<html>
		<head>
		<title>EffectType statistics</title>
		</head>
		<body>
		<table border=1 style="border-collapse:collapse;">` +
		HTML_tableheader +
		`{{range $i, $v := .}}` +
		HTML_row +
		`{{end}}` +
		HTML_tableheader +
		`</table>
	
		<br/>
		</body>
		</html>
		`)
	if err != nil {
		return err
	}
	if err := tplIndex.Execute(w, es); err != nil {
		return err
	}
	return nil
}

func Index(i int) string {
	return effecttype.EffectType(i).String()
}

var IndexFn = template.FuncMap{
	"EffectTypeIndex": Index,
}

const (
	HTML_tableheader = `<tr>
		<th>Name</th>
		<th>Value</th>
		</tr>`
	HTML_row = `<tr>
		<td>{{EffectTypeIndex $i}}</td>
		<td>{{$v}}</td>
		</tr>
		`
)
