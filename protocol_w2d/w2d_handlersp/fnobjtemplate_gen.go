// Code generated by "genprotocol -ver=311c9c290570c203090ea3d20ebbf006c810eb958a7a96aef942015fbfd89d2f -basedir=. -prefix=w2d -statstype=int"

package w2d_handlersp

/* obj base demux fn map template

var DemuxRsp2ObjFnMap = [...]func(me interface{}, hd w2d_packet.Header, body interface{}) error {
w2d_idcmd.Invalid : objRecvRspFn_Invalid,
w2d_idcmd.ListStage : objRecvRspFn_ListStage,
w2d_idcmd.EnterStage : objRecvRspFn_EnterStage,
w2d_idcmd.LeaveStage : objRecvRspFn_LeaveStage,
w2d_idcmd.ChatToStage : objRecvRspFn_ChatToStage,
w2d_idcmd.MakeTeam : objRecvRspFn_MakeTeam,
w2d_idcmd.Act : objRecvRspFn_Act,
w2d_idcmd.Heartbeat : objRecvRspFn_Heartbeat,

}

	func objRecvRspFn_Invalid(me interface{}, hd w2d_packet.Header, body interface{}) error {
		robj , ok := body.(*w2d_obj.RspInvalid_data)
		if !ok {
			return fmt.Errorf("packet mismatch %v", body )
		}
		return fmt.Errorf("Not implemented %v", robj)
	}

	func objRecvRspFn_ListStage(me interface{}, hd w2d_packet.Header, body interface{}) error {
		robj , ok := body.(*w2d_obj.RspListStage_data)
		if !ok {
			return fmt.Errorf("packet mismatch %v", body )
		}
		return fmt.Errorf("Not implemented %v", robj)
	}

	func objRecvRspFn_EnterStage(me interface{}, hd w2d_packet.Header, body interface{}) error {
		robj , ok := body.(*w2d_obj.RspEnterStage_data)
		if !ok {
			return fmt.Errorf("packet mismatch %v", body )
		}
		return fmt.Errorf("Not implemented %v", robj)
	}

	func objRecvRspFn_LeaveStage(me interface{}, hd w2d_packet.Header, body interface{}) error {
		robj , ok := body.(*w2d_obj.RspLeaveStage_data)
		if !ok {
			return fmt.Errorf("packet mismatch %v", body )
		}
		return fmt.Errorf("Not implemented %v", robj)
	}

	func objRecvRspFn_ChatToStage(me interface{}, hd w2d_packet.Header, body interface{}) error {
		robj , ok := body.(*w2d_obj.RspChatToStage_data)
		if !ok {
			return fmt.Errorf("packet mismatch %v", body )
		}
		return fmt.Errorf("Not implemented %v", robj)
	}

	func objRecvRspFn_MakeTeam(me interface{}, hd w2d_packet.Header, body interface{}) error {
		robj , ok := body.(*w2d_obj.RspMakeTeam_data)
		if !ok {
			return fmt.Errorf("packet mismatch %v", body )
		}
		return fmt.Errorf("Not implemented %v", robj)
	}

	func objRecvRspFn_Act(me interface{}, hd w2d_packet.Header, body interface{}) error {
		robj , ok := body.(*w2d_obj.RspAct_data)
		if !ok {
			return fmt.Errorf("packet mismatch %v", body )
		}
		return fmt.Errorf("Not implemented %v", robj)
	}

	func objRecvRspFn_Heartbeat(me interface{}, hd w2d_packet.Header, body interface{}) error {
		robj , ok := body.(*w2d_obj.RspHeartbeat_data)
		if !ok {
			return fmt.Errorf("packet mismatch %v", body )
		}
		return fmt.Errorf("Not implemented %v", robj)
	}

*/
