// Code generated by "genprotocol -ver=311c9c290570c203090ea3d20ebbf006c810eb958a7a96aef942015fbfd89d2f -basedir=. -prefix=w2d -statstype=int"

package w2d_idcmd

import "fmt"

type CommandID uint16 // use in packet header, DO NOT CHANGE
const (
	Invalid     CommandID = iota //
	ListStage                    //
	EnterStage                   //
	LeaveStage                   //
	ChatToStage                  //
	MakeTeam                     // // make team
	Act                          // // client user,ai action
	Heartbeat                    // // sayHello?

	CommandID_Count int = iota
)

var _CommandID2string = [CommandID_Count]string{
	Invalid:     "Invalid",
	ListStage:   "ListStage",
	EnterStage:  "EnterStage",
	LeaveStage:  "LeaveStage",
	ChatToStage: "ChatToStage",
	MakeTeam:    "MakeTeam",
	Act:         "Act",
	Heartbeat:   "Heartbeat",
}

func (e CommandID) String() string {
	if e >= 0 && e < CommandID(CommandID_Count) {
		return _CommandID2string[e]
	}
	return fmt.Sprintf("CommandID%d", uint16(e))
}

var _string2CommandID = map[string]CommandID{
	"Invalid":     Invalid,
	"ListStage":   ListStage,
	"EnterStage":  EnterStage,
	"LeaveStage":  LeaveStage,
	"ChatToStage": ChatToStage,
	"MakeTeam":    MakeTeam,
	"Act":         Act,
	"Heartbeat":   Heartbeat,
}

func String2CommandID(s string) (CommandID, bool) {
	v, b := _string2CommandID[s]
	return v, b
}
